#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main() {
    char label[10], opcode[10], operand[10];
    char code[10], objcode[10], symbol[10], symaddr[10];
    int start = 0, loc;
    FILE *input = fopen("output.txt", "r");
    FILE *optab = fopen("optab.txt", "r");
    FILE *symtab = fopen("symtab.txt", "r");
    FILE *object = fopen("object.txt", "w");

    if (!input || !optab || !symtab || !object) {
        printf("Error opening files.\n");
        return 1;
    }

    fscanf(input, "%s\t%s\t%s", label, opcode, operand);
    if (strcmp(opcode, "START") == 0) {
        start = atoi(operand);
        fprintf(object, "H^%s^%06d\n", label, start);
        fscanf(input, "%s\t%s\t%s", label, opcode, operand);
    }

    fprintf(object, "T^");

    while (strcmp(opcode, "END") != 0) {
        int found = 0;
        rewind(optab);

        while (fscanf(optab, "%s\t%s", code, objcode) != EOF) {
            if (strcmp(opcode, code) == 0) {
                rewind(symtab);
                while (fscanf(symtab, "%s\t%s", symbol, symaddr) != EOF) {
                    if (strcmp(operand, symbol) == 0) {
                        fprintf(object, "%s%s^", objcode, symaddr);
                        found = 1;
                        break;
                    }
                }
                break;
            }
        }

        if (!found) {
            if (strcmp(opcode, "WORD") == 0)
                fprintf(object, "%06d^", atoi(operand));
            else if (strcmp(opcode, "BYTE") == 0) {
                if (operand[0] == 'C') {
                    for (int i = 2; i < strlen(operand) - 1; i++)
                        fprintf(object, "%02X", operand[i]);
                    fprintf(object, "^");
                } else if (operand[0] == 'X') {
                    for (int i = 2; i < strlen(operand) - 1; i++)
                        fprintf(object, "%c", operand[i]);
                    fprintf(object, "^");
                }
            }
        }

        if (fscanf(input, "%s\t%s\t%s", label, opcode, operand) == EOF)
            break;
    }

    fprintf(object, "\nE^%06d\n", start);

    fclose(input);
    fclose(optab);
    fclose(symtab);
    fclose(object);
    printf("Object program written to object.txt\n");
    return 0;
}
